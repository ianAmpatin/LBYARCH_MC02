section .data
RESULT_VECTOR DQ 0
VECTOR_SIZE DQ 0

DIFFERENCE_X DQ 0
DIFFERENCE_Y DQ 0
OFFSET DQ 0

section .text
bits 64
default rel
global CompDist
extern sqrt

CompDist:
	; PUSH RSI AND RBP
	PUSH RSI
	PUSH RBP
	MOV RBP, RSP
	ADD RSP, 16
	
	; STORE ADDRESS	
	LEA RAX, [RBP + 40]
	MOV [RESULT_VECTOR], RAX
	
	MOV RAX, [RBP + 48]
	MOV [VECTOR_SIZE], RAX
	
	; LOOPING
	MOV R15, 0
	L1:
		; TRANSFER VALUES TO SIMD REGISTERS
		MOVSD XMM0, [RCX]
		MOVSD XMM1, [RDX]
		MOVSD XMM2, [R8]
		MOVSD XMM3, [R9]
		
		; COMPUTE DIFFERENCE
		SUBSD XMM1, XMM0
		MOVSD [DIFFERENCE_X], XMM1
		
		SUBSD XMM3, XMM2
		MOVSD [DIFFERENCE_Y], XMM3
		
		; COMPUTE SQUARED VALUES
		MOVSD XMM0, [DIFFERENCE_X]
		MULSD XMM0, [DIFFERENCE_X]
		
		MOVSD XMM1, [DIFFERENCE_Y]
		MULSD XMM1, [DIFFERENCE_Y]
		
		; ADD VALUES
		ADDSD XMM0, XMM1

		; GET SQUARE ROOT
		SQRTSD XMM1, XMM0

		; STORE IN RESULT VECTOR
		MOV R14, [RESULT_VECTOR]
		ADD R14, [OFFSET]
		
		; UPDATE ADDRESS FOR NEXT ITERATION
		ADD RCX, 8
		ADD RDX, 8
		ADD R8, 8
		ADD R9, 8

		; UPDATE OFFSET
		MOV R13, [OFFSET]
		ADD R13, 8
		MOV [OFFSET], R13
		
		; LOOP CONTROL
		INC R15
		CMP RAX, [VECTOR_SIZE]
		JE EL1
	JMP L1
	EL1:
	
	; POP RSI AND RBP
	POP RBP
	POP RSI
	XOR RAX, RAX
	RET